# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    SimpleCQRS\:
        resource: '../src/SimpleCQRS/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    SimpleCQRS\UI\Controller\:
        resource: '../src/SimpleCQRS/UI/Controller/*'
        tags: ['controller.service_arguments']

    SimpleCQRS\UI\EventListener\RequestTransformerListener:
        tags:
            - { name: "kernel.event_listener", event: "kernel.request", method: "onKernelRequest",  priority: "100" }

    SimpleCQRS\UI\ParamConverter\CommandConverter:
        tags:
            - { name: "request.param_converter", converter: "command" }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    SimpleCQRS\Application\Handler\:
      public: true
      resource: '../src/SimpleCQRS/Application/Handler/*Handler.php'
      tags:
        - { name: 'prooph_service_bus.my_command_bus.route_target', message_detection: true }

    SimpleCQRS\Domain\InventoryItems:
        alias: inventory_items

    SimpleCQRS\Infrastructure\Repository\EventStoreInventoryItems:
        autowire: false

    Prooph\ServiceBus\CommandBus:
      alias: 'prooph_service_bus.my_command_bus'
